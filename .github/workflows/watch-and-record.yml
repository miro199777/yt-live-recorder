name: Watch & Record YouTube Live

on:
  schedule:
    - cron: '*/20 * * * *'  # Check every 20 minutes
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  watch:
    runs-on: ubuntu-latest

    steps:
      - name: Install yt-dlp and jq
        run: |
          sudo apt update
          sudo apt install -y jq
          pip install -U yt-dlp

      - name: Store cookies from GitHub secret
        run: |
          echo "${{ secrets.YOUTUBE_COOKIES }}" > cookies.txt
          # Debugging: Check the cookies file content (excluding sensitive data)
          head -n 10 cookies.txt
          # Ensure cookies.txt is in the Netscape format
          if ! grep -q -E '^[#]|^\.\S+\s+TRUE\s+[^\s]+\s+[^\s]+\s+[0-9]+\s+[^\s]+\s+[^\s]+$' cookies.txt; then
            echo "Error: cookies.txt does not seem to be in Netscape format!" && exit 1
          fi

      - name: Check if stream is live
        id: livecheck
        run: |
          # Debugging: Check if cookies file exists and is in correct format
          if [[ ! -f cookies.txt ]]; then
            echo "Cookies file not found!"
            exit 1
          fi
          
          # Fetch live stream details
          LIVE_JSON=$(yt-dlp --cookies cookies.txt --geo-bypass --age-limit 18 -j https://www.youtube.com/watch?v=q_w8pdNkKUI)
          
          # Check if we get a valid JSON response
          echo "LIVE_JSON: $LIVE_JSON"
          
          IS_LIVE=$(echo "$LIVE_JSON" | jq -r '.is_live')
          echo "Live status: $IS_LIVE"  # Debugging line
          echo "is_live=$IS_LIVE" >> $GITHUB_ENV

      - name: Debug is_live value
        run: echo "The value of is_live is ${{ env.is_live }}"

      - name: Download live stream
        if: ${{ env.is_live == 'true' }}
        run: |
          echo "Starting to download the stream..."
          VIDEO_URL=$(echo "$LIVE_JSON" | jq -r '.url')
          echo "Video is live. Downloading from: $VIDEO_URL"
          yt-dlp --cookies cookies.txt -o './recordings/%(title)s.%(ext)s' $VIDEO_URL
